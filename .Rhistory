select(!X2_Q2:X6_Q5) %>%
dplyr::rename_at(vars(starts_with("X1_")), funs(str_remove(.,"X1_")))
# Subset Conditions B
qual_m <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Mary Jean Amon") %>%
# Remove Duplicates
select(Condition, X2_Q2:X2_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X2_")), funs(str_remove(.,"X2_")))
qual_s <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Shuo Niu") %>%
# Remove Duplicates
select(Condition, X3_Q2:X3_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X3_")), funs(str_remove(.,"X3_")))
# Combine and Pivot
qual_k <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Kelsey Fulton") %>%
# Remove Duplicates
select(Condition, X4_Q2:X4_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X4_")), funs(str_remove(.,"X4_")))
# Combine and Pivot
qual_full <-
# Combine
bind_rows(qual_i,qual_m, qual_k, qual_s)
# Combine the Questions
}
qualtricsTidy <- qual_pivot()
qualtricsTidy = qualtricsTidy %>% dplyr::rename(Modality=Q2,
CVReview=Q4,
"HighQualityScholarlyWork"=Q3_1,
"BuildPartnerships"=Q3_6,
TeacherScholar=Q3_2,
TeachingCS=Q3_7,
DEIResearch=Q3_3,
DEIImpact=Q3_9,
Comments=Q5
)
qualtricsQuant = qualtricsTidy %>%  select(Condition, HighQualityScholarlyWork:DEIImpact) %>%  pivot_longer(cols = HighQualityScholarlyWork:DEIImpact,
values_to = "Value",
names_to = "Question")
#A function to add arrows on the chart
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
means = aggregate(~Condition, data=qualtricsQuant, mean)
means = aggregate(Value~Condition, data=qualtricsQuant, mean)
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean)
View(means)
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean, na.rm=T)
View(means)
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean, na.rm=TRUE)
qualtricsQuant.Value = as.numeric(qualtricsQuant.Value)
qualtricsQuant["Value"] = as.numeric(qualtricsQuant["Value"])
qualtricsQuant["Value"] = as.numeric(unlist(qualtricsQuant["Value"]))
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean, na.rm=TRUE)
ze_barplot <- barplot(means , beside=T , legend.text=T,col=c("blue" , "skyblue") , ylim=c(0,lim) , ylab="height")
ze_barplot <- barplot(means , beside=T , legend.text=T,col=c("blue" , "skyblue") , ylim=c(0,lim) , ylab="Value")
ggplot(means, aes(fill=Condition, y=Value, x=Question)) +
geom_bar(position="dodge", stat="identity")
library(ggplot2)
ggplot(means, aes(fill=Condition, y=Value, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(means, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value")
ggplot(means, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat="identity")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat="identity")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
position=position_dodge(), stat="identity",
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
position=position_dodge(), stat="mean",
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat="mean")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
geom_errorbar(aes(ymin=len-se, ymax=len+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
```
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
geom_errorbar(aes(ymin=len-se, ymax=len+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar")
library(Hmisc)
install.packages("Hmsc")
View(qualtricsTidy)
View(qualtricsTidy)
View(qualtricsTidy)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
stat_summary(fun.y = mean_cl_normal,
geom = "errorbar")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2, position=position_dodge())
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2, position=position_dodge(1))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2, position=position_dodge(0.5))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",,fun.y="sd", width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y="sd", width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",fun="sd", width=0.2, position=position_dodge(0.8))
.y
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = "mean", na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y="sd", width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun.y = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y="se", width=0.2, position=position_dodge(0.8))
View(means)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y="se", width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun=mean, width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun=mean, width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun=sd, width=0.2, position=position_dodge(0.8))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))
help("geom_errorbar")
stat_summary(fun.y = mean_cl_normal,
geom = "errorbar") + scale_fill_brewer(palette="Dark2")
stat_summary(fun.y = mean_cl_normal,
geom = "errorbar")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Dark2")
library(wesanderson)
install.packages("wesanderson")
library(wesanderson)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="FantasticFox")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_manual(values=wes_palette(n=4, name="FantasticFox"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_manual(values=wes_palette(n=4, name="Darjeeling"))
wes_palette(n=4, name="Darjeeling"))
wes_palette(n=4, name="Darjeeling")
library(wesanderson)
es_palette(n=4, name="Darjeeling")
wes_palette(n=4, name="Darjeeling")
wes_palette("FantasticFox")
wes_palette("GrandBudapest1")
wes_palette("FantasticFox1")
wes_palette("Darjeeling1")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_manual(values=wes_palette(n=4, name="Darjeeling1"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_manual(values=wes_palette(n=4, name="Darjeeling1"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_manual(values=wes_palette(n=4, name="Darjeeling1"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_manual(values=wes_palette(n=4, name="FantasticFox1"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_manual(values=wes_palette(n=4, name="Royal1"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_manual(values=wes_palette(n=4, name="Moonrise3"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_manual(values=wes_palette(n=4, name="Moonrise2"))
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_brewer(palette="Dark2")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_color_brewer(palette="Dark2")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Dark2")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Accent")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Set2")
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Set1")
help(ggsave)
library(ggplot2)
library(wesanderson)
#A function to add arrows on the chart
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean, na.rm=TRUE)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Set1")
ggsave("CompBar.png", width = 12, height = 6)
#scale_fill_manual(values=wes_palette(n=4, name="Moonrise2"))
1
library(ggplot2)
library(wesanderson)
#A function to add arrows on the chart
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
means = aggregate(Value~Condition+Question, data=qualtricsQuant, mean, na.rm=TRUE)
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary",fun.y=sd, width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Set1")
ggsave("CompBar.png", width = 12, height = 6)
#scale_fill_manual(values=wes_palette(n=4, name="Moonrise2"))
qualtricsTidy <- qual_pivot()
qual_pivot <- function(qualtrics){
q <-
#Once Run you can select a file
#read.csv(file.choose())
read.csv("CS tenure-track candidate feedback 2023_March 8, 2023_16.26.csv")
qual_c <-
q %>%
# Remove Annoying Two Rows
filter(Finished == "TRUE") %>%
# Remove 'Unneeded' Columns
select(!StartDate:Duration..in.seconds.) %>%
select(!Finished:UserLanguage) %>%
# flag empty condition rows
mutate_all(na_if,"")
# Subset Conditions A
qual_i  <-
qual_c %>%
# Get Only A Conditions
filter(Condition == "Ilia Sucholutsky") %>%
# Remove Duplicates
select(!X2_Q2:X6_Q5) %>%
dplyr::rename_at(vars(starts_with("X1_")), funs(str_remove(.,"X1_")))
# Subset Conditions B
qual_m <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Mary Jean Amon") %>%
# Remove Duplicates
select(Condition, X2_Q2:X2_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X2_")), funs(str_remove(.,"X2_")))
qual_s <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Shuo Niu") %>%
# Remove Duplicates
select(Condition, X3_Q2:X3_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X3_")), funs(str_remove(.,"X3_")))
# Combine and Pivot
qual_k <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Kelsey Fulton") %>%
# Remove Duplicates
select(Condition, X4_Q2:X4_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X4_")), funs(str_remove(.,"X4_")))
# Combine and Pivot
qual_full <-
# Combine
bind_rows(qual_i,qual_m, qual_k, qual_s)
# Combine the Questions
}
qualtricsTidy <- qual_pivot()
qualtricsTidy = qualtricsTidy %>% dplyr::rename(Modality=Q2,
CVReview=Q4,
"HighQualityScholarlyWork"=Q3_1,
"BuildPartnerships"=Q3_6,
TeacherScholar=Q3_2,
TeachingCS=Q3_7,
DEIResearch=Q3_3,
DEIImpact=Q3_9,
Comments=Q5
)
write.csv(qualtricsTidy, "QualtricsTidyFile_wide.csv")
qualtricsQuant = qualtricsTidy %>%  select(Condition, HighQualityScholarlyWork:DEIImpact) %>%  pivot_longer(cols = HighQualityScholarlyWork:DEIImpact,
values_to = "Value",
names_to = "Question")
qualtricsQuant["Value"] = as.numeric(unlist(qualtricsQuant["Value"]))
write.csv(qualtricsQuant, "QualtricsTidy_Quant_Long.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(stringr)
qual_pivot <- function(qualtrics){
q <-
#Once Run you can select a file
read.csv(file.choose())
#read.csv("CS tenure-track candidate feedback 2023_March 8, 2023_16.26.csv")
qual_c <-
q %>%
# Remove Annoying Two Rows
filter(Finished == "TRUE") %>%
# Remove 'Unneeded' Columns
select(!StartDate:Duration..in.seconds.) %>%
select(!Finished:UserLanguage) %>%
# flag empty condition rows
mutate_all(na_if,"")
# Subset Conditions A
qual_i  <-
qual_c %>%
# Get Only A Conditions
filter(Condition == "Ilia Sucholutsky") %>%
# Remove Duplicates
select(!X2_Q2:X6_Q5) %>%
dplyr::rename_at(vars(starts_with("X1_")), funs(str_remove(.,"X1_")))
# Subset Conditions B
qual_m <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Mary Jean Amon") %>%
# Remove Duplicates
select(Condition, X2_Q2:X2_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X2_")), funs(str_remove(.,"X2_")))
qual_s <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Shuo Niu") %>%
# Remove Duplicates
select(Condition, X3_Q2:X3_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X3_")), funs(str_remove(.,"X3_")))
# Combine and Pivot
qual_k <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Kelsey Fulton") %>%
# Remove Duplicates
select(Condition, X4_Q2:X4_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X4_")), funs(str_remove(.,"X4_")))
# Combine and Pivot
qual_full <-
# Combine
bind_rows(qual_i,qual_m, qual_k, qual_s)
# Combine the Questions
}
qualtricsTidy <- qual_pivot()
q <-
#Once Run you can select a file
read.csv(file.choose())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(stringr)
qual_pivot <- function(qualtrics){
q <-
#Once Run you can select a file
read.csv(file.choose())
#read.csv("CS tenure-track candidate feedback 2023_March 8, 2023_16.26.csv")
qual_c <-
q %>%
# Remove Annoying Two Rows
filter(Finished == "TRUE") %>%
# Remove 'Unneeded' Columns
select(!StartDate:Duration..in.seconds.) %>%
select(!Finished:UserLanguage) %>%
# flag empty condition rows
mutate_all(na_if,"")
# Subset Conditions A
qual_i  <-
qual_c %>%
# Get Only A Conditions
filter(Condition == "Ilia Sucholutsky") %>%
# Remove Duplicates
select(!X2_Q2:X6_Q5) %>%
dplyr::rename_at(vars(starts_with("X1_")), funs(str_remove(.,"X1_")))
# Subset Conditions B
qual_m <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Mary Jean Amon") %>%
# Remove Duplicates
select(Condition, X2_Q2:X2_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X2_")), funs(str_remove(.,"X2_")))
qual_s <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Shuo Niu") %>%
# Remove Duplicates
select(Condition, X3_Q2:X3_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X3_")), funs(str_remove(.,"X3_")))
# Combine and Pivot
qual_k <-
qual_c %>%
# Get Only B Conditions
filter(Condition == "Kelsey Fulton") %>%
# Remove Duplicates
select(Condition, X4_Q2:X4_Q5) %>%
# Rename Columns
dplyr::rename_at(vars(starts_with("X4_")), funs(str_remove(.,"X4_")))
# Combine and Pivot
qual_full <-
# Combine
bind_rows(qual_i,qual_m, qual_k, qual_s)
# Combine the Questions
}
qualtricsTidy <- qual_pivot()
qualtricsTidy = qualtricsTidy %>% dplyr::rename(Modality=Q2,
CVReview=Q4,
"HighQualityScholarlyWork"=Q3_1,
"BuildPartnerships"=Q3_6,
TeacherScholar=Q3_2,
TeachingCS=Q3_7,
DEIResearch=Q3_3,
DEIImpact=Q3_9,
Comments=Q5
)
write.csv(qualtricsTidy, "QualtricsTidyFile_wide.csv")
qualtricsQuant = qualtricsTidy %>%  select(Condition, HighQualityScholarlyWork:DEIImpact) %>%  pivot_longer(cols = HighQualityScholarlyWork:DEIImpact,
values_to = "Value",
names_to = "Question")
qualtricsQuant["Value"] = as.numeric(unlist(qualtricsQuant["Value"]))
write.csv(qualtricsQuant, "QualtricsTidy_Quant_Long.csv")
library(ggplot2)
library(wesanderson)
#A function to add arrows on the chart
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
#Plot Mean and Standard Error
ggplot(qualtricsQuant, aes(fill=Condition, y=Value, x=Question)) + ylab("Mean value") +
geom_bar(position="dodge", stat = "summary", fun = mean, na.rm = TRUE) +
geom_errorbar(stat="summary", width=0.2, position=position_dodge(0.8))  + scale_fill_brewer(palette="Set1")
ggsave("CompBar.png", width = 12, height = 6)
#scale_fill_manual(values=wes_palette(n=4, name="Moonrise2"))
setwd("~/Library/CloudStorage/OneDrive-UniversityofDenver/GenerativeAI/R Analysis")
knitr::opts_chunk$set(echo = TRUE)
df = read.csv("evaluations.csv")
sjp.corr(df, corr.method = "spearman")
sjp.corr(df, corr.method = "spearman")
sjt.corr(df, corr.method = "spearman")
sjPlot::tab_corr(df, corr.method = "spearman")
sjPlot::tab_corr(df[["hr_relevance", "hr_clarity"]], corr.method = "spearman")
sjPlot::tab_corr(df[c("hr_relevance", "hr_clarity")], corr.method = "spearman")
sjPlot::tab_corr(df[c("hr_relevance", "hr_clarity", "hr_creativity", "hr_complexity")], corr.method = "spearman")
sjPlot::tab_corr(df[c("gr_relevance", "gr_clarity", "gr_creativity", "gr_complexity")], corr.method = "spearman")
sjPlot::tab_corr(df[c("hr_relevance", "hr_clarity", "hr_creativity", "hr_complexity")], corr.method = "spearman")
sjPlot::tab_corr(df[c("hr_relevance", "hr_clarity", "hr_creativity", "hr_complexity")], corr.method = "spearman", triangle = "upper")
sjPlot::tab_corr(df[c("gr_relevance", "gr_clarity", "gr_creativity", "gr_complexity")], corr.method = "spearman", triangle = "upper")
cor(df["hr_relevance"], df["gr_relevance"], method="spearman")
cor(df["hr_relevance"], df["gr_relevance"], method="spearman")
cor(df["hr_complexity"], df["gr_complexity"], method="spearman")
cor(df["hr_clarity"], df["gr_clarity"], method="spearman")
cor(df["hr_creativity"], df["gr_creativity"], method="spearman")
cor(df["hr_score"], df["gr_score"], method="spearman")
cor.test(df["hr_relevance"], df["gr_relevance"], method="spearman")
relevance = cor(df["hr_relevance"], df["gr_relevance"], method="spearman")
View(relevance)
cor.test(relevance)
relevance = cor.test(df["hr_relevance"], df["gr_relevance"], method="spearman")
relevance = cor.test(~ hr_relevance + gr_relevance, data=df, method="spearman")
View(relevance)
summary(cor.test(~ hr_relevance + gr_relevance, data=df, method="spearman"))
cor.test(~ hr_relevance + gr_relevance, data=df, method="spearman")
cor.test(~ hr_relevance + gr_relevance, data=df, method="spearman")
cor.test(~ hr_complexity + gr_complexity, data=df, method="spearman")
cor.test(~ hr_clarity + gr_clarity, data=df, method="spearman")
cor.test(~ hr_creativity + gr_creativity, data=df, method="spearman")
cor.test(~ hr_score + gr_score, data=df, method="spearman")
